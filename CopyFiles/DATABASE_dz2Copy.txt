CREATE DATABASE Academy

USE Academy



--********************************************************
--Кафедры (Departments)




CREATE TABLE Departments
(
ID INT PRIMARY KEY IDENTITY NOT NULL,
Financing MONEY DEFAULT 0 CHECK(Financing >= 0)NOT NULL,       -- Финансирование (Financing). Фонд финансирования *******афедры.
Name NVARCHAR(100) CHECK(LEN(Name)>0) UNIQUE NOT NULL     -- Название *******афедры.
) 

INSERT INTO Departments
VALUES
(150000,'mathematical analysis and function theory'),
(100000,'geometry and algebra'),
(230000,'differential equations'),
(80000,'Software Development'),
(20000,'statistics and probability theory'),
(10000,'aerohydromechanics and energy and mass transfer'),
(9000,'theoretical and computer mechanics')


SELECT * FROM Departments
DROP TABLE Departments




--********************************************************
--Фа*******ультеты (Faculties)


CREATE TABLE Faculties
(
ID INT PRIMARY KEY IDENTITY NOT NULL,
Dean NVARCHAR(MAX) CHECK(LEN(Dean)>0) NOT NULL,                  -- Де*******ан фа*******ультета
Name NVARCHAR(100) CHECK(LEN(Name)>0) UNIQUE NOT NULL     --Название фа*******ультета.
)

INSERT INTO Faculties
VALUES
('Де*******ан 1','Название фа*******ультета 1'),
('Де*******ан 2','Название фа*******ультета 2'),
('Де*******ан 3','Название фа*******ультета 3'),
('Де*******ан 4','Название фа*******ультета 4'),
('Де*******ан 5','Название фа*******ультета 5')

INSERT INTO Faculties
VALUES
('Де*******ан 6','Computer Science')


SELECT * FROM Faculties
DROP TABLE Faculties


--********************************************************
--Группы (Groups)



CREATE TABLE Groups
(
ID INT PRIMARY KEY IDENTITY NOT NULL,
Name NVARCHAR(10) CHECK(LEN(Name)>0) UNIQUE NOT NULL,    --Название группы.
Rating INT CHECK(Rating BETWEEN 0 AND 5) NOT NULL,                 --Рейтинг группы.
Year INT CHECK(Year BETWEEN 0 AND 5) NOT NULL                      --Курс (год) на *******отором обучается группа.
)


INSERT INTO Groups
VALUES
('Группа 1',0,1),
('Группа 2',2,5),
('Группа 3',5,3),
('Группа 4',4,5),
('Группа 5',4,3),
('Группа 6',0,5),
('Группа 7',5,5),
('Группа 8',4,5),
('Группа 9',2,3)



SELECT * FROM Groups
DROP TABLE Groups



--********************************************************
--Преподаватели (Teachers)


CREATE TABLE Teachers
(
ID INT PRIMARY KEY IDENTITY NOT NULL,
EmploymentDate DATE CHECK(EmploymentDate > '01.01.1990') NOT NULL,       --Дата приема преподавателя на работу.
IsAssistant BIT DEFAULT 0 NOT NULL,                                                               --Является ли преподаватель ассистентом.
IsProfessor BIT DEFAULT 0 NOT NULL,                                                              --Является ли преподаватель профессором.
Name NVARCHAR(MAX) CHECK(LEN(Name)>0) NOT NULL,                               --Имя преподавателя.
Position NVARCHAR(MAX) CHECK(LEN(Position)>0) NOT NULL,                        --Должность преподавателя
Premium MONEY DEFAULT 0 CHECK(Premium >=0) NOT NULL,                        --Надбав*******а преподавателя.
Salary MONEY CHECK(Salary >0) NOT NULL,                                                    --Став*******а преподавателя.
Surname NVARCHAR(MAX) CHECK(LEN(Surname)>0) NOT NULL                      --Фамилия преподавателя.
)


INSERT INTO Teachers
VALUES
('2015-06-15', 1, 0, 'Имя 1', 'Должность 1',100,1000,'Фамилия 1'),     
('1995-03-22', 0, 1, 'Имя 2', 'Должность 2',5000,45000,'Фамилия 2'),      
('2010-09-01', 0, 0, 'Имя 3', 'Должность 3',1000,5000,'Фамилия 3'),        
('2012-07-15', 0, 0, 'Имя 4', 'Должность 4',1000,5000,'Фамилия 4'),      
('1999-08-30', 0, 1, 'Имя 5', 'Должность 5',6000,50000,'Фамилия 5'),      
('2014-10-30', 0, 1, 'Имя 6', 'Должность 6',500,1000,'Фамилия 6'),      
('2002-08-20', 1, 0, 'Имя 7', 'Должность 7',400,5000,'Фамилия 7'),      
('2011-08-30', 1, 0, 'Имя 8', 'Должность 8',140,3000,'Фамилия 8')

INSERT INTO Teachers
VALUES
('2018-08-15', 1, 0, 'Имя 9', 'Должность 9',150,1500,'Фамилия 9'),     
('2019-08-22', 1, 0, 'Имя 10', 'Должность 10',500,4500,'Фамилия 10') 

INSERT INTO Teachers
VALUES
('2020-08-01', 1, 0, 'Имя 11', 'Должность 11',150,1000,'Фамилия 11'),     
('2021-08-02', 1, 0, 'Имя 12', 'Должность 12',300,900,'Фамилия 12')

SELECT * FROM Teachers
DROP TABLE Teachers



--********************************************************
--Запросы


--1. Вывести таблицу *******афедр, но расположить ******* поля в обратном поряд*******е
SELECT Name,Financing,ID
FROM Departments


--2. Вывести названия групп и их рейтинги, используя в *******ачестве названий выводимых полей “Group Name” и “Group Rating” соответственно.
SELECT Name AS 'Group Name', Rating AS 'Group Rating'
FROM Groups

--3. Вывести для преподавателей их фамилию, процент став*******и по отношению ******* надбав*******е и процент став*******и по отношению
--******* зарплате (сумма став*******и и надбав*******и).
SELECT Surname,
CASE 
    WHEN Premium = 0 THEN NULL 
    ELSE (Salary / Premium) * 100 
END AS PercentageOfPremium,
CASE 
    WHEN (Salary + Premium) = 0 THEN NULL
    ELSE (Salary / (Salary + Premium)) * 100 
END AS PercentageOfTotal
FROM Teachers;

--4. Вывести таблицу фа*******ультетов в виде одного поля в следующем формате: “The dean of faculty [faculty] is [dean].”.
SELECT 
    'The dean of faculty ' + Name + ' is ' + Dean + '.' AS FacultyInfo
FROM Faculties;

--5. Вывести фамилии преподавателей, *******оторые являются профессорами и став*******а *******оторых превышает 1050.
SELECT Surname FROM Teachers
WHERE IsProfessor = 1 AND (Salary>1050)

--6. Вывести названия *******афедр, фонд финансирования *******оторых меньше 11000 или больше 25000.
SELECT Name FROM Departments
WHERE (Financing < 11000) OR (Financing > 25000)

--7. Вывести названия фа*******ультетов *******роме фа*******ультета “Computer Science”.
SELECT Name FROM Faculties
WHERE Name!='Computer Science'

--8. Вывести фамилии и должности преподавателей, *******оторые не являются профессорами.
SELECT Surname,Position FROM Teachers
WHERE IsProfessor = 0


--9. Вывести фамилии, должности, став*******и и надбав*******и ассистентов, у *******оторых надбав*******а в диапазоне от 160 до 550.
SELECT Surname,Position,Salary,Premium FROM Teachers
WHERE IsAssistant = 1 AND (Premium BETWEEN 160 AND 550)

--10.Вывести фамилии и став*******и ассистентов.
SELECT Surname,Salary FROM Teachers
WHERE IsAssistant = 1


--11.Вывести фамилии и должности преподавателей, *******оторые были приняты на работу до 01.01.2000.
SELECT Surname,Position FROM Teachers
WHERE EmploymentDate < '2000-01-01'


--12.Вывести названия *******афедр, *******оторые в алфавитном поряд*******е
--располагаются до *******афедры “Software Development”. Выводимое поле должно иметь название “Name of Department”.
SELECT Name AS 'Name of Department' FROM Departments
WHERE Name < 'Software Development'
ORDER BY Name;

--13.Вывести фамилии ассистентов, имеющих зарплату (сумма став*******и и надбав*******и) не бол******* 1200.
SELECT Surname FROM Teachers
WHERE IsAssistant = 1 AND (Salary + Premium)<=1200

--14.Вывести названия групп 5-го *******урса, имеющих рейтинг в диапазоне от 2 до 4.
SELECT Name FROM Groups
WHERE Year = 5 AND (Rating BETWEEN 2 AND 4)

--15.Вывести фамилии ассистентов со став*******ой меньше 550 или надбав*******ой меньше 200.
SELECT Surname FROM Teachers
WHERE IsAssistant = 1 AND (Salary <550 OR Premium < 200)



