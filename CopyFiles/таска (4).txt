Разработать многопоточную систему, которая симулирует процесс обработки данных на фабрике. В системе несколько потоков, каждый из которых выполняет одну из следующих ролей:

Производители: создают данные с разной скоростью.
Обработчики: берут данные от производителей и обрабатывают их (например, преобразуют их каким-либо образом).
Потребители: получают обработанные данные и записывают их в финальный список.
Каждая из этих ролей должна быть представлена отдельным набором потоков, и они должны корректно взаимодействовать друг с другом.

Основные требования:
Производители:

Каждый производитель генерирует данные с некоторой случайной задержкой и передаёт их в общий буфер.
Данные представляют собой уникальные объекты (например, числа или строки).
Производители работают параллельно.
Обработчики:

Обработчики берут данные из буфера производителей, обрабатывают их (например, умножают числа на случайное значение или преобразуют строки).
После обработки данные передаются в другой общий буфер, который используется потребителями.
Обработчики работают параллельно.
Потребители:

Потребители берут обработанные данные из буфера обработчиков и записывают их в финальный список (например, для сохранения в базе данных или вывода в консоль).
Потребители работают параллельно.
Синхронизация:

Для взаимодействия между производителями, обработчиками и потребителями используйте блокировки, Monitor, Mutex или Semaphore для обеспечения корректного взаимодействия потоков с общими буферами.
Используйте объекты синхронизации, такие как AutoResetEvent или ManualResetEvent, чтобы потребители не пытались обработать данные, если буфер пуст.
Останов системы:

Программа должна завершать работу корректно. После остановки (например, по сигналу от пользователя) все потоки должны завершиться, при этом все данные должны быть обработаны до конца.
Реализуйте механизм плавного завершения всех потоков после того, как все данные будут переданы от производителей к потребителям.



Буферы:

Реализуйте два общих буфера для данных: один для передачи от производителей к обработчикам и второй — от обработчиков к потребителям. Для синхронизации доступа к буферам используйте механизмы синхронизации.
Производство данных:

Пусть каждый производитель генерирует данные с задержкой в 500–1000 миллисекунд.
Например, производители могут генерировать числа от 1 до 100 или строки.
Обработка данных:

Обработчики должны брать данные из первого буфера, выполнять обработку (например, увеличить число на случайное значение от 1 до 10 или преобразовать строку), а затем передавать обработанные данные во второй буфер.
Задержка обработки может составлять 200–500 миллисекунд.
Запись данных:

Потребители берут данные из второго буфера и выводят их в консоль с указанием времени обработки.



Добавьте возможность паузы и возобновления системы по команде пользователя (pause, resume).
Реализуйте возможность мониторинга состояния системы, чтобы пользователь мог запросить текущее количество данных на каждом этапе обработки (например, сколько данных сейчас в каждом буфере).
Реализуйте обработку ошибок (например, если буфер переполнен, данные должны временно не передаваться).
