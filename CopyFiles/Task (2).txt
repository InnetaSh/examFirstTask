Система должна поддерживать следующие функции:

Создание заказов — каждый заказ должен иметь:

Уникальный ID.
Название товара.
Время обработки заказа (случайное от 2 до 10 секунд).
Приоритет заказа (низкий, средний, высокий).
Статус заказа (ожидает обработки, обрабатывается, завершен).
Параллельная обработка — система должна обрабатывать несколько заказов одновременно, с приоритетом выполнения заказов в зависимости от их уровня приоритета:

Высокий приоритет обрабатывается раньше низкого.
Если несколько заказов с одинаковым приоритетом, они обрабатываются в порядке поступления.
Максимальное количество одновременно обрабатываемых заказов — 3.
Моделирование работы курьеров:

Курьеры обрабатывают заказы параллельно.
Каждый курьер может взять на себя только один заказ за раз.
Контроль за выполнением:

В процессе обработки должно выводиться в консоль текущее состояние каждого заказа (начало обработки, завершение обработки, статус ожидания).
В конце система должна выводить сообщение об общем времени выполнения всех заказов.
Классы:

Order: класс для создания заказа.
Courier: класс для моделирования курьера, который обрабатывает заказ.
OrderManager: класс для управления заказами, который распределяет заказы между курьерами.
TaskManager: класс, который управляет асинхронной обработкой заказов с приоритетами.
Требования к реализации:

Заказы должны быть обработаны параллельно с использованием Task.
Используйте приоритетную очередь для хранения и сортировки заказов.
Курьеры должны работать независимо друг от друга. Используйте пул потоков для ограничения количества одновременно выполняемых задач (например, до 3).
Реализуйте все классы с правильной инкапсуляцией и распределением обязанностей.
